#Each Team Universal by Hyasabaru

[core]
name: gameEachTeamUniversal
tags: dosEachTeamUniversal
class: CustomUnitMetadata
showInEditor: false
price: 0
onNewMapSpawn: mapCenter_eachActiveTeam
maxHp: 10000
mass: 10000
techLevel: 1
buildSpeed: 0s
#availableInDemo: true
radius: 0
isBio: false
isBuilding: true
disableAllUnitCollisions: true
isUnselectable: true
canNotBeDamaged: true
canNotBeDirectlyAttacked: true
showOnMinimap: false
fogOfWarSightRange:0
effectOnDeath: NONE
hideScorchMark: true
explodeOnDeath: false
explodeOnDeathGroundCollosion: false

autoTriggerCooldownTime: 1s

borrowResourcesWhileAlive: Power=0.1, spiceStorage=0.1

#===== Actions =====#

[hiddenAction_onCreate]
autoTriggerOnEvent:completeAndActive
addResources: Power=0.1, spiceStorage=0.1, Spice=0

[hiddenAction_spiceLimit]
autoTrigger:if self.isResourceLargerThan( source='Spice',compareTarget='spiceStorage',byMoreThan=-1)
requireConditional: if self.hasUnitInTeam(withTag="spiceStorage") and self.globalTeamTags(includes="spiceLimitation")
resourceAmount:Spice
resourceAmount_setValue:0
resourceAmount_addOtherResource:spiceStorage
#temporarilyAddTags: spiceLimitFull
#alsoTriggerOrQueueActionConditional: 
alsoQueueAction: spiceLimitMessage

[hiddenAction_spiceLimitMessage]
requireConditional: if not self.tags(includes="spiceLimitFull")
buildSpeed: 0s
showMessageToPlayer: Spice Storage is Full, build more Silos
temporarilyAddTags: spiceLimitFull

[hiddenAction_spiceLimitReset]
autoTrigger:if not self.isResourceLargerThan( source='Spice',compareTarget='spiceStorage',byMoreThan=-61)
requireConditional: if self.tags(includes="spiceLimitFull")
temporarilyRemoveTags: spiceLimitFull

[hiddenAction_AISpice]
autoTrigger: if self.isControlledByAI
addResourcesScaledByAIHandicaps: Spice=0.5

[hiddenAction_spiceRaceWinner]
autoTrigger: if self.hasResources(Spice=10000)
requireConditional: if self.globalTeamTags(includes='spiceRaceMode') and not numberOfUnitsInTeam(withTag='spiceRaceVictory', greaterThan=0)
temporarilyAddTags: spiceRaceVictory
showMessageToAllPlayers: %{self.playerName} Wins! Has %{self.resource.Spice} Spices!

[hiddenAction_spiceRaceDefeat]
autoTrigger: if self.globalTeamTags(includes='spiceRaceMode') and numberOfUnitsInEnemyTeam(withTag='spiceRaceVictory', greaterThan=0)
requireConditional: if not self.globalTeamTags(includes='spiceRaceDefeat')
addGlobalTeamTags: spiceRaceDefeat

[hiddenAction_survivalModeDefeat]

[hiddenAction_survivalModeTimer]
autoTrigger: if self.globalTeamTags(includes='survivalMode')
requireConditional: if self.globalTeamTags(includes='houseSelected') and self.resource(type="Spice", greaterThan=0)
addResources: Spice=-1

[hiddenAction_survivalMode]
autoTrigger: if self.globalTeamTags(includes='survivalMode')
requireConditional: if not self.tags(includes='spiceRefinery')
temporarilyAddTags: spiceRefinery, survivalMode

[hiddenAction_onCreateActivator]
requireConditional: if not self.globalTeamTags(includes='spiceMode')
autoTriggerOnEvent: created
alsoQueueAction: spiceLimitation
spawnUnits: spiceActivator

[hiddenAction_spiceLimitation]
requireConditional: if not self.globalTeamTags(includes='survivalMode') and not self.globalTeamTags(includes='razingMode')
buildSpeed: 0s
addGlobalTeamTags: spiceLimitation

[hiddenAction_spiceLimitationRemove]
autoTrigger: if self.globalTeamTags(includes="razingMode") or self.globalTeamTags(includes="survivalMode")
requireConditional: if self.globalTeamTags(includes="spiceLimitation")
removeGlobalTeamTags: spiceLimitation

#===== Detection =====#

#[hiddenAction_noneDetected]
#autoTrigger: if self.resource(type="nukeDetected", greaterThan=0)
#requireConditional: if self.hasUnitInTeam(withTag="outpost") and self.globalTeamTags(includes="factionSelected")
#alsoQueueAction: AtrDeathHandDetect, OrdDeathHandDetect, HarDeathHandDetect
#addResources: nukeDetected=-1

[hiddenAction_deathHandDetected]
autoTrigger: if numberOfUnitsInEnemyTeam(withTag="launchDeathHand",greaterThan=0)
requireConditional: if self.hasUnitInTeam(withTag="outpost") and not self.tags(includes="anounceDeathHand")
alsoQueueAction: AtrDeathHandDetect, OrdDeathHandDetect, HarDeathHandDetect, SarDeathHandDetect
temporarilyAddTags: anounceDeathHand

[hiddenAction_detectionEnd]
autoTrigger: if not numberOfUnitsInEnemyTeam(withTag="launchDeathHand",greaterThan=0)
requireConditional: if self.tags(includes="anounceDeathHand")
temporarilyRemoveTags: anounceDeathHand

[hiddenAction_AtrDeathHandDetect]
requireConditional: if self.globalTeamTags(includes='houseAtreidesMod')
playSoundToPlayer: ROOT:Data/Sound/Voices/Atreides/enemyMissileLaunched.ogg:0.9
buildSpeed: 0s

[hiddenAction_OrdDeathHandDetect]
requireConditional: if self.globalTeamTags(includes='houseOrdosMod')
playSoundToPlayer: ROOT:Data/Sound/Voices/Ordos/enemyMissileLaunched.ogg:0.9
buildSpeed: 0s

[hiddenAction_HarDeathHandDetect]
requireConditional: if self.globalTeamTags(includes='houseHarkonnenMod')
playSoundToPlayer: ROOT:Data/Sound/Voices/Harkonnen/enemyMissileLaunched.ogg:0.9
buildSpeed: 0s

[hiddenAction_SarDeathHandDetect]
@copyFromSection: hiddenAction_HarDeathHandDetect
requireConditional: if self.globalTeamTags(includes='houseSardaukarMod')

[resource_nukeDetected]
hidden:true

#===== End of Actions =====#

[graphics]
isVisible: false
image: SHARED:blank.png
#image: SHARED:debug_marker.png
icon_zoomed_out_neverShow: true
image_wreak:  NONE
image_shadow: NONE
shadowOffsetX:1
shadowOffsetY:1
showQueueBar: false
disableLowHpFire: true
disableLowHpSmoke: true

[attack]
canAttack: false
canAttackFlyingUnits: false
canAttackLandUnits: true
canAttackUnderwaterUnits: false
maxAttackRange: 99999
showRangeUIGuide: false

[movement]
movementType: AIR
moveSpeed: 0
moveAccelerationSpeed: 0
moveDecelerationSpeed: 0
maxTurnSpeed: 0
turnAcceleration: 0

[ai]
useAsBuilder: false